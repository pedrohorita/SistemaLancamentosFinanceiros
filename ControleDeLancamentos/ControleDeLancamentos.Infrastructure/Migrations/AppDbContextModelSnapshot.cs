// <auto-generated />
using System;
using ControleDeLancamentos.Infrastructure.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleDeLancamentos.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleDeLancamentos.Domain.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos relacionados a venda",
                            Nome = "Vendas",
                            UsuarioCriacao = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos relacionados a empréstimos",
                            Nome = "Emprestimos",
                            UsuarioCriacao = "admin"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos relacionados a despesas",
                            Nome = "Despesas",
                            UsuarioCriacao = "admin"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos relacionados a investimentos",
                            Nome = "Investimentos",
                            UsuarioCriacao = "admin"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos relacionados a outros",
                            Nome = "Outros",
                            UsuarioCriacao = "admin"
                        });
                });

            modelBuilder.Entity("ControleDeLancamentos.Domain.Entidades.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Lancamentos", (string)null);
                });

            modelBuilder.Entity("ControleDeLancamentos.Domain.Entidades.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tipos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos de entrada",
                            Nome = "Entrada",
                            UsuarioCriacao = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lançamentos de saída",
                            Nome = "Saída",
                            UsuarioCriacao = "admin"
                        });
                });

            modelBuilder.Entity("ControleDeLancamentos.Domain.Entidades.Lancamento", b =>
                {
                    b.HasOne("ControleDeLancamentos.Domain.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeLancamentos.Domain.Entidades.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
